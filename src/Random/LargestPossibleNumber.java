/*
Given an integer N, find the largest number that can be generated by rearranging digits of N.
Write a function solution that accept an integer N and returns a largest possible integer number.
Input: 4356
Output: 6543
4356 can be rearranged as 3456, 5643, 6534, 6543 etc.
Largest number out of these are 6543.
 */

package Random;

import java.util.Scanner;

public class LargestPossibleNumber {

    public String getInput(){
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number: ");
        String str=scanner.nextLine();
        return str;
    }

    public int[] getArray(String s){
        int[] arr = new int[s.length()];
        for (int i = 0; i < s.length(); i++) {
            char ch = s.charAt(i);
            arr[i] = Character.getNumericValue(ch);
        }
        return arr;
    }

    public int[] sort(int[] arr){
        int temp;
        for (int i = 0; i < arr.length; i++) {
            for (int j = i+1; j < arr.length; j++) {
                if(arr[i] < arr[j]) {
                    temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        return arr;
    }

    public void printArray(int[] arr){
        for (int element : arr)
            System.out.print(element);
    }

    public static void main(String[] args) {
        LargestPossibleNumber object = new LargestPossibleNumber();
        String str = object.getInput();
        int[] arr = object.getArray(str);
        arr = object.sort(arr);
        System.out.print("Largest possible number: ");
        object.printArray(arr);
    }
}
